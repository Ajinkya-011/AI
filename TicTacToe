#include <iostream>
#include <vector>
using namespace std;

void printBoard(char board[3][3]) {
    for (int i=0;i<3;i++) {
        for (int j=0;j<3;j++) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}


bool checkWin(char board[][3], char player) {
    // Check rows and columns
    for (int i = 0; i < 3; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }
    // Check diagonals
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }
    return false;
}

int main() {
    
    char board[3][3];
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            board[i][j]='-';
        }
    }
    char currentPlayer = 'X';
    int moves = 0;

    while (moves < 9) {

        cout << "Current board:" << endl;
        printBoard(board);

        int row, col;
        cout << "Player " << currentPlayer << "'s turn. Enter row and column (0-2): ";
        cin >> row >> col;

        if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == '-') {
            board[row][col] = currentPlayer;
            ++moves;

            if (checkWin(board, currentPlayer)) {
                cout << "Player " << currentPlayer << " wins!" << endl;
                break;
            }


            if (currentPlayer == 'X'){
                currentPlayer = 'O';
            }  
            else{
                currentPlayer = 'X';
            }
        } 
        else {
            cout << "Invalid move. Please try again." << endl;
        }
    }

    if (moves == 9) {
        cout << "It's a draw!" << endl;
    }

    return 0;
}
